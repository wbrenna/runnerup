apply plugin: 'com.android.application'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 20
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionName rootProject.ext.versionName
        versionCode rootProject.ext.versionCode
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        release {
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        //disable specific checks for specific paths
        lintConfig file("lint.xml")
        checkReleaseBuilds true
        //promote to error
        fatal 'InlinedApi', 'InconsistentArrays'
        //Must be suppressed for com.google.android.support:wearable
        warning 'GradleCompatible'
        // Ignore some specific checks completely
        ignore 'MissingTranslation'
        //icon with all densities are not included - don't bother
        ignore 'IconMissingDensityFolder'

        showAll true
        //debug issues in Travis
        textReport true
        textOutput 'stdout'
    }
}

dependencies {
    compile project(':common')

    //recyclerview-v7, support-v4 is not used by wear app source but wearable
    //force same version as in the app
    compile "com.android.support:support-v4:${rootProject.ext.supportLibrary}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibrary}"

    //TODO: Suppress warning for GradleCompatible
    compile "com.google.android.support:wearable:${rootProject.ext.googleWearVersion}"
    compile "com.google.android.gms:play-services-wearable:${rootProject.ext.googlePlayServicesVersion}"
}

def props = new Properties()
if (rootProject.file("release.properties").exists()) {
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile = rootProject.file(props.keyStore)
    android.signingConfigs.release.storePassword = props.keyStorePassword
    android.signingConfigs.release.keyAlias = props.keyAlias
    android.signingConfigs.release.keyPassword = props.keyAliasPassword
} else {
    project.logger.info('INFO: Set the values storeFile, storePassword, keyAlias, and keyPassword in release.properties to sign the release.')
    android.buildTypes.release.signingConfig = null
}
